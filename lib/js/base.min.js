var Fxp;!function(e){var t;!function(e){var t=function(){function e(e,t){this.addMessage=function(e,t,s){var o={};o.msgDate=new Date,o.MessageType=t,o.Message=e,o.show=!0,s===!0?o.doNotAutoClose=s:o.doNotAutoClose=!1;var n=this.$rootScope,a=this.$interval,r=this.msgInterval,p=this.msgTimeout;this.$rootScope.messages.push(o),this.$rootScope.messageClass=this.$rootScope.messages.length>0?"modal-show":"modal-hide",1==this.$rootScope.messages.length&&$(":focus").length>0&&(this.$rootScope.activeElement=$(":focus")),this.$rootScope.messages.length>0&&setTimeout(function(){$(".message-content").focus()},100),this.msgInterval=this.$interval(function(){for(var e,t=new Date,s=n.messages.length-1;s>=0;s--){var o=n.messages[s].MessageType.toLowerCase();"success"!=o&&("warning"!=o&&"info"!=o||n.messages[s].doNotAutoClose)||(e=t-n.messages[s].msgDate,e>=p&&n.messages.splice(s,1))}0==n.messages.length&&(a.cancel(r),n.messageClass="modal-hide",n.activeElement&&(n.activeElement.focus(),n.activeElement=void 0))},1e3)},this.closeMessage=function(e){var t=this.$rootScope.messages.indexOf(e);this.$rootScope.messages.splice(t,1),this.$rootScope.messageClass=this.$rootScope.messages.length>0?"modal-show":"modal-hide",0==this.$rootScope.messages.length?this.$interval.cancel(this.msgInterval):setTimeout(function(){$(".message-content").focus()},100)},this.$rootScope=e,this.$rootScope.messages=[],this.$rootScope.messageClass="modal-hide",this.$interval=t,(""==this.msgTimeout||null==this.msgTimeout||isNaN(this.msgTimeout))&&(this.msgTimeout=2e3),this.$rootScope.closeMessage=this.closeMessage.bind(this)}return e}();e.FxpMessageService=t,angular.module("fxpEnvironment").service("fxpMessage",["$rootScope","$interval",t]).service("FxpMessageService",["$rootScope","$interval",t])}(t=e.Services||(e.Services={}))}(Fxp||(Fxp={})),environmentApp.controller("DashboardController",["$scope","FxpFactory","$state","$rootScope","fxpMessage","fxpConstants",function($scope,FxpFactory,$state,$rootScope,fxpMessage,fxpConstants){function PageInit(){FxpFactory.getConfigDetails().then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));if(data.length>0)if($scope.configEnv=data,null!=localStorage.getItem("selectedEnv")){var obj=JSON.parse(localStorage.getItem("selectedEnv"));$scope.configEnv.filter(function(e){e.EnvironmentName===obj.EnvironmentName&&($scope.selectedEnvironment=e,$scope.onChangeEnvironment(obj))})}else $rootScope.$emit("enablePublish",!1);else $rootScope.$emit("enablePublish",!1),$rootScope.isConfigEnvCall=!0,$state.go("setup")},function(e){fxpMessage.addMessage(fxpConstants.error,"error")})}$scope.selectedEnvironment={},PageInit(),$scope.onChangeEnvironment=function(e){var t="";try{var s=!1;null!=e?(delete e.Environment,t=e.EnvironmentName,localStorage.setItem("selectedEnv",JSON.stringify(e)),s="file"!==e.Source||"mock"!==e.FileSourceType):(t="",localStorage.removeItem("selectedEnv"),s=!1),$rootScope.$emit("enablePublish",s),$rootScope.$emit("environmentChange",t)}catch(e){fxpMessage.addMessage(fxpConstants.error,"error")}},$scope.onNavigate=function(e){var t="";try{if(null!=localStorage.getItem("selectedEnv")){var s=JSON.parse(localStorage.getItem("selectedEnv"));t=s.Source==fxpConstants.Source.File?s.LocalPath.replace(/\\/g,"\\\\")+"\\\\":"./resources/"+JSON.parse(localStorage.getItem("selectedEnv")).EnvironmentName+"/",$state.go(e,{EnvID:t})}else fxpMessage.addMessage(fxpConstants.SelectEnvironmentWarning,"warning")}catch(e){fxpMessage.addMessage(fxpConstants.error,"error")}}}]),environmentApp.controller("FxpDetailsController",["$scope","FxpFactory","$filter","$state","$stateParams","fxpMessage","fxpConstants","fxpModel",function($scope,FxpFactory,$filter,$state,$stateParams,fxpMessage,fxpConstants,fxpModel){function PageInit(){FxpFactory.getPersonaList($stateParams.EnvID).then(function(response){var personaList=[],data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.PersonaData=data;for(var persona in data.Personas)personaList.push(persona);$scope.Personas=personaList}),FxpFactory.getRoutes($stateParams.EnvID).then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.FxpHelpLinks=data.FxpHelpLinks}),FxpFactory.getPartnerModules($stateParams.EnvID).then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.PartnerModules=data.PartnerModules,$scope.Scripts=data.PartnerAssets.Scripts,$scope.Styles=data.PartnerAssets.Styles,$scope.BaseConfiguration=data.BaseConfiguration,$scope.FxpConfigurationStrings=data.BaseConfiguration.FxpConfigurationStrings,$scope.FxpUIStrings=data.BaseConfiguration.FxpConfigurationStrings.UIStrings,$scope.OBOUIStrings=data.BaseConfiguration.FxpConfigurationStrings.UIStrings.OBOUIStrings,$scope.FxpFooterData=data.BaseConfiguration.FxpFooterData}),FxpFactory.getPersonaRoles($stateParams.EnvID).then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.PersonaRoles=data.Persona}),$scope.footerdata=FxpFactory.getFxpFooterData()}$scope.formSubmitted=!1,$scope.isPersonaRouteUpdated=!1,$scope.isPersonaHLinkUpdated=!1,$scope.editScriptsModel={},$scope.editPartnerModuleform={},$scope.editStylesform={},$scope.editScriptsform={},$scope.editRouteform={},$scope.FxpUIStrings={},$scope.editfxptelemetryform={},$scope.verifyPersonaHelpLinkMap=function(e,t){var s=$scope.PersonaData;return s.Personas[e].FxpHelpLinks.indexOf(t)>=0},PageInit(),$scope.getconfigParse=function(data){if(null!=data||void 0!=data)return JSON.parse(JSON.stringify(eval("("+data+")")))},$scope.onNavigate=function(e){$state.go(e)},$scope.editTelemetry=function(e,t,s,o){try{$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=o,$scope.envEdiables={},s==fxpConstants.Action.Edit?($scope.envEdiables.key=e,$scope.envEdiables.value=t,$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editFxpTelemetry")).modal("show")}catch(e){fxpMessage.addMessage(fxpConstants.Telemetry.Error,"error")}},$scope.deleteTelemetry=function(e,t){$scope.Deletedindex=t,$scope.deleteTelemetryKey=e,angular.element(document.querySelector("#confirmTelemetryModule")).modal("show")},$scope.deleteTelemetryDetails=function(){delete $scope.BaseConfiguration.Telemetry[$scope.deleteTelemetryKey];var data=angular.copy($scope.BaseConfiguration.Telemetry);FxpFactory.updateTelemetryDetails(data,$stateParams.EnvID).then(function(e){e!=fxpConstants.NoData&&(angular.element(document.querySelector("#confirmTelemetryModule")).modal("hide"),fxpMessage.addMessage(fxpConstants.Telemetry.Delete,"success"))},function(reason){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.BaseConfiguration.Telemetry=envDetails.BaseConfiguration.Telemetry,angular.element(document.querySelector("#confirmTelemetryModule")).modal("hide"),fxpMessage.addMessage(fxpConstants.Telemetry.DeleteError,"error")})},$scope.updateFxpTelemetry=function(model,form){$scope.submitted=!0,form.$valid&&!$scope.isDulplicateKey&&($scope.BaseConfiguration.Telemetry[model.key]=model.value,FxpFactory.updateTelemetryDetails($scope.BaseConfiguration.Telemetry,$stateParams.EnvID).then(function(e){e!=fxpConstants.NoData&&(angular.element(document.querySelector("#editFxpTelemetry")).modal("hide"),fxpMessage.addMessage(fxpConstants.Telemetry.Update,"success"))},function(reason){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.BaseConfiguration.Telemetry=envDetails.BaseConfiguration.Telemetry,fxpMessage.addMessage(fxpConstants.Telemetry.Error,"error"),angular.element(document.querySelector("#editFxpTelemetry")).modal("hide")}))},$scope.navigateTohome=function(){$state.go("wizard")},$scope.editUIStrings=function(e,t,s,o){$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=o,$scope.envEdiables={},s==fxpConstants.Action.Edit?($scope.envEdiables.key=e,$scope.envEdiables.value=t,$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editFxpUIStrings")).modal("show")},$scope.deleteUIStrings=function(e,t){$scope.deleteUIstrings=e,angular.element(document.querySelector("#confirmUIStrings")).modal("show")},$scope.deleteUIStringsDetails=function(){delete $scope.FxpUIStrings[$scope.deleteUIstrings];var e=angular.copy($scope.FxpUIStrings);FxpFactory.updateFxpUIDetails(e,$stateParams.EnvID).then(function(e){e!=fxpConstants.NoData?(angular.element(document.querySelector("#confirmUIStrings")).modal("hide"),fxpMessage.addMessage(fxpConstants.UIStrings.Delete,"success")):fxpMessage.addMessage(fxpConstants.UIStrings.Error,"error")})},$scope.updateFxpUIStrings=function(e,t){$scope.submitted=!0,t.$valid&&!$scope.isDulplicateKey&&($scope.BaseConfiguration.FxpConfigurationStrings.UIStrings[e.key]=e.value,FxpFactory.updateFxpUIDetails($scope.BaseConfiguration.FxpConfigurationStrings.UIStrings,$stateParams.EnvID).then(function(e){e!=fxpConstants.NoData?(angular.element(document.querySelector("#editFxpUIStrings")).modal("hide"),fxpMessage.addMessage(fxpConstants.UIStrings.Update,"success")):fxpMessage.addMessage(fxpConstants.UIStrings.Error,"error")}))},$scope.editOBOStrings=function(e,t,s,o){$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=o,$scope.envEdiables={},s==fxpConstants.Action.Edit?($scope.envEdiables.key=e,$scope.envEdiables.value=t,$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editFxpOBOStrings")).modal("show")},$scope.deleteOBOStrings=function(e){$scope.deleteOBOstrings=e,angular.element(document.querySelector("#confirmOBOStrings")).modal("show")},$scope.deleteOBOStringsDetails=function(){delete $scope.FxpUIStrings.OBOUIStrings[$scope.deleteOBOstrings],FxpFactory.updateFxpOBODetails($scope.FxpUIStrings.OBOUIStrings,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#confirmOBOStrings")).modal("hide"),fxpMessage.addMessage(fxpConstants.OBOStrings.Delete,"success")},function(e){fxpMessage.addMessage(fxpConstants.OBOStrings.Error.Delete,"error")})},$scope.updateFxpOBOStrings=function(e,t){$scope.submitted=!0,t.$valid&&!$scope.isDulplicateKey&&($scope.BaseConfiguration.FxpConfigurationStrings.UIStrings.OBOUIStrings[e.key]=e.value,FxpFactory.updateFxpOBODetails($scope.BaseConfiguration.FxpConfigurationStrings.UIStrings.OBOUIStrings,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#editFxpOBOStrings")).modal("hide"),fxpMessage.addMessage(fxpConstants.OBOStrings.Update,"success")},function(e){fxpMessage.addMessage(fxpConstants.OBOStrings.Error.Update,"success")}))},$scope.MessageNameAvilabiltyCheck=function(e){var t=$scope.envEdiables.MessageName;$scope.isDulplicateKey=$scope.FxpConfigurationStrings.UIMessages.hasOwnProperty(t)},$scope.keyDuplicateCheck=function(e){try{switch($scope.isDulplicateKey=!1,e){case fxpConstants.Models.Telemetry:var t=$scope.envEdiables.key;$scope.isDulplicateKey=$scope.BaseConfiguration.Telemetry.hasOwnProperty(t);break;case fxpConstants.Models.UIStrings:var s=$scope.envEdiables.key;$scope.isDulplicateKey=$scope.FxpUIStrings.hasOwnProperty(s);break;case fxpConstants.Models.OBOUIStrings:var o=$scope.envEdiables.key;$scope.isDulplicateKey=$scope.FxpUIStrings.OBOUIStrings.hasOwnProperty(o);break;case fxpConstants.Models.Persona:var n=$scope.envEdiables.Name;$scope.isDulplicateKey=$scope.PersonaRoles.filter(function(e,t){if(t!=$scope.editIndex)return e.Name.toLowerCase()==n.toLowerCase()}).length>0;break;case fxpConstants.Models.PersonaRole:var a=$scope.envEdiables.RoleName,r=$scope.PersonaRoles.indexOf($scope.envEdiables.parent);$scope.isDulplicateKey=$scope.PersonaRoles[r].Roles.filter(function(e,t){if(t!=$scope.editIndex)return e.RoleName.toLowerCase()==a.toLowerCase()}).length>0;break;case fxpConstants.Models.FxpHelpLinks:var p=$scope.envEdiables.DisplayText;$scope.isDulplicateKey=$scope.FxpHelpLinks.filter(function(e,t){if(t!=$scope.editIndex)return e.DisplayText.toLowerCase()==p.toLowerCase()}).length>0;break;case fxpConstants.Models.FxpHelpChildLinks:var i=$scope.envEdiables.DisplayText,r=$scope.FxpHelpLinks.indexOf($scope.envEdiables.parent);$scope.isDulplicateKey=$scope.FxpHelpLinks[r].HelpLinks.filter(function(e,t){if(t!=$scope.editIndex)return e.DisplayText.toLowerCase()==i.toLowerCase()}).length>0}}catch(e){}},$scope.editMessages=function(e,t,s,o){$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=o,$scope.envEdiables={},s==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(t),$scope.envEdiables.MessageName=e,console.log(t),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editFxpMessages")).modal("show")},$scope.deleteFxpMessages=function(e,t){$scope.deleteMessages=e,angular.element(document.querySelector("#confirmMessages")).modal("show")},$scope.deleteMessageDetails=function(){delete $scope.FxpConfigurationStrings.UIMessages[$scope.deleteMessages];var e=angular.copy($scope.FxpConfigurationStrings.UIMessages);FxpFactory.updateFxpMessageDetails(e,$stateParams.EnvID).then(function(){angular.element(document.querySelector("#confirmMessages")).modal("hide"),fxpMessage.addMessage(fxpConstants.FXPMessage.Delete,"success")})},$scope.updateFxpMessage=function(e,t){if($scope.submitted=!0,t.$valid&&!$scope.isDulplicateKey){var s={};e.Action==fxpConstants.Action.Update?($scope.FxpConfigurationStrings.UIMessages[e.MessageName].ErrorMessage=e.ErrorMessage,$scope.FxpConfigurationStrings.UIMessages[e.MessageName].ErrorMessageTitle=e.ErrorMessageTitle,s=angular.copy($scope.FxpConfigurationStrings.UIMessages)):(fxpModel.Messages.ErrorMessage=e.ErrorMessage,fxpModel.Messages.ErrorMessageTitle=e.ErrorMessageTitle,$scope.FxpConfigurationStrings.UIMessages[e.MessageName]=fxpModel.Messages,s=angular.copy($scope.FxpConfigurationStrings.UIMessages)),FxpFactory.updateFxpMessageDetails(s,$stateParams.EnvID).then(function(t){angular.element(document.querySelector("#editFxpMessages")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.FXPMessage.Update,"success"):fxpMessage.addMessage(fxpConstants.FXPMessage.Add,"success")},function(t){angular.element(document.querySelector("#editFxpMessages")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.FXPMessage.UpdateError,"error"):fxpMessage.addMessage(fxpConstants.FXPMessage.AddError,"error"),console.log(t.data)})}},$scope.editPersona=function(e,t,s){$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.Id=parseInt(e.Id),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editPersona")).modal("show")},$scope.updatePersona=function(e,t){if($scope.submitted=!0,t.$valid&&!$scope.isDulplicateKey){var s={},o=$scope.editIndex;if(e.Action==fxpConstants.Action.Update){$scope.PersonaRoles[o].Id=e.Id,$scope.PersonaRoles[o].Name=e.Name;var s=angular.copy($scope.PersonaRoles)}else{fxpModel.Persona.Id=e.Id,fxpModel.Persona.Name=e.Name,fxpModel.Persona.Roles=[],$scope.PersonaRoles.push(fxpModel.Persona);var s=angular.copy($scope.PersonaRoles)}FxpFactory.updatePersonaRoles(s,$stateParams.EnvID).then(function(t){angular.element(document.querySelector("#editPersona")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.Persona.Update,"success"):fxpMessage.addMessage(fxpConstants.Persona.Add,"success")},function(t){angular.element(document.querySelector("#editPersona")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.Persona.UpdateError,"error"):fxpMessage.addMessage(fxpConstants.Persona.AddError,"error")})}},$scope.editPersonaRole=function(e,t,s,o){$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=o,$scope.envEdiables={},s==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(t),$scope.envEdiables.Id=parseInt(t.Id),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),$scope.envEdiables.parent=e,angular.element(document.querySelector("#editPersonaRoles")).modal("show")},$scope.updatePersonaRole=function(e,t){if($scope.submitted=!0,t.$valid&&!$scope.isDulplicateKey){var s=$scope.editIndex,o={},n=$scope.PersonaRoles.indexOf(e.parent);e.Action==fxpConstants.Action.Update?($scope.PersonaRoles[n].Roles[s].RoleId=e.RoleId,$scope.PersonaRoles[n].Roles[s].RoleName=e.RoleName):(fxpModel.PersonaRole.RoleId=e.RoleId,fxpModel.PersonaRole.RoleName=e.RoleName,$scope.PersonaRoles[n].Roles.push(fxpModel.PersonaRole));var o=angular.copy($scope.PersonaRoles);FxpFactory.updatePersonaRoles(o,$stateParams.EnvID).then(function(t){angular.element(document.querySelector("#editPersonaRoles")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.Persona.UpdateRole,"success"):fxpMessage.addMessage(fxpConstants.Persona.AddRole,"success")},function(t){angular.element(document.querySelector("#editPersonaRoles")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.Persona.Role.Error.Update,"error"):fxpMessage.addMessage(fxpConstants.Persona.Role.Error.Add,"error")})}},$scope.deletePersona=function(e){$scope.Deletedindex=e,angular.element(document.querySelector("#confirmDeletePersona")).modal("show")},$scope.deletePersonaRole=function(e,t){$scope.Deletedindex=t,$scope.Personaindex=e,angular.element(document.querySelector("#confirmDeletePersonaRole")).modal("show")},$scope.deletePersonaConfirm=function(){try{$scope.PersonaRoles.splice($scope.Deletedindex,1);var e=angular.copy($scope.PersonaRoles);FxpFactory.updatePersonaRoles(e,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#confirmDeletePersona")).modal("hide"),fxpMessage.addMessage(fxpConstants.Persona.Delete,"success")},function(){fxpMessage.addMessage(fxpConstants.Persona.Error.Delete,"error")})}catch(e){fxpMessage.addMessage(fxpConstants.Persona.Error.Delete,"error")}},$scope.deletePersonaRoleConfirm=function(){$scope.PersonaRoles[$scope.Personaindex].Roles.splice($scope.Deletedindex,1);var e=angular.copy($scope.PersonaRoles);FxpFactory.updatePersonaRoles(e,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#confirmDeletePersonaRole")).modal("hide"),fxpMessage.addMessage(fxpConstants.Persona.DeleteRole,"success")},function(){fxpMessage.addMessage(fxpConstants.Persona.Error.DeleteRole,"error")})},$scope.updateHelplinkstoFiles=function(){try{var e=angular.copy($scope.FxpHelpLinks);FxpFactory.updateHelplinkstoFiles(e,$scope.PersonaData,$stateParams.EnvID)}catch(e){fxpMessage.addMessage(fxpConstants.HelpLinks.Error.Update,"error")}},$scope.personaHelpLinkChecked=function(e,t,s){var o=angular.element(document.querySelector("#"+s));FxpFactory.updatePersonaMapperConfig(e,t,!o[0].checked,$stateParams.EnvID,"HelpLinks"),$scope.isPersonaHLinkUpdated=!0},$scope.updatePersonaHelpLinks=function(){try{FxpFactory.updatePersonaHelpLinkMapptofiles($stateParams.EnvID),fxpMessage.addMessage(fxpConstants.HelpLinks.UpdatePersona,"success"),$scope.isPersonaHLinkUpdated=!1}catch(e){fxpMessage.addMessage(fxpConstants.HelpLinks.Error.UpdatePersona,"error")}},$scope.deleteFxpHelpLink=function(e){$scope.Deletedindex=e,angular.element(document.querySelector("#confirmDeleteHelpLink")).modal("show")},$scope.deleteFxpSubHelplinks=function(e,t){$scope.Deletedindex=t,$scope.Personaindex=e,angular.element(document.querySelector("#confirmDeleteHelpSubLink")).modal("show")},$scope.editFxpHelplinks=function(e,t,s){try{$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.DisplayOrder=parseInt(e.DisplayOrder),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editFxpHelpLinks")).modal("show")}catch(e){fxpMessage.addMessage(fxpConstants.Error,"error")}},$scope.editFxpsubHelplinks=function(e,t,s,o){$scope.isDulplicateKey=!1,$scope.submitted=!1,$scope.editIndex=o,$scope.envEdiables={},s==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(t),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),$scope.envEdiables.parent=e,angular.element(document.querySelector("#editFxpHelpSublinks")).modal("show")},$scope.updateFxpSubHelplinks=function(model,form){if($scope.submitted=!0,form.$valid&&!$scope.isDulplicateKey){var updateModel={},index=$scope.editIndex,pIndex=$scope.FxpHelpLinks.indexOf(model.parent),helpLinks={};model.Action==fxpConstants.Action.Update?($scope.FxpHelpLinks[pIndex].HelpLinks[index].DisplayText=model.DisplayText,$scope.FxpHelpLinks[pIndex].HelpLinks[index].DisplayOrder=model.DisplayOrder,$scope.FxpHelpLinks[pIndex].HelpLinks[index].Href=model.Href,$scope.FxpHelpLinks[pIndex].HelpLinks[index].Title=model.Title):(fxpModel.FxpSubHelpLink.DisplayText=model.DisplayText,fxpModel.FxpSubHelpLink.Href=model.Href,fxpModel.FxpSubHelpLink.Title=model.Title,fxpModel.FxpSubHelpLink.DisplayOrder=model.DisplayOrder,updateModel=angular.copy(fxpModel.FxpSubHelpLink),$scope.FxpHelpLinks[pIndex].HelpLinks.push(updateModel)),helpLinks=angular.copy($scope.FxpHelpLinks[pIndex]),FxpFactory.updateFxpHelpLinksDetails(helpLinks,$stateParams.EnvID,pIndex,fxpConstants.Action.Update).then(function(e){angular.element(document.querySelector("#editFxpHelpSublinks")).modal("hide"),model.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.SubHelplinks.Update,"success"):fxpMessage.addMessage(fxpConstants.SubHelplinks.Add,"success")},function(error){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("routes")+")")));$scope.FxpHelpLinks=envDetails.FxpHelpLinks,angular.element(document.querySelector("#editFxpHelpSublinks")).modal("hide"),model.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.SubHelplinks.Error.Update,"error"):fxpMessage.addMessage(fxpConstants.SubHelplinks.Error.Add,"error")})}},$scope.deleteHelpConfirm=function(){FxpFactory.updateFxpHelpLinksDetails(null,$stateParams.EnvID,$scope.Deletedindex,fxpConstants.Action.Delete).then(function(response){$scope.PersonaData=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("personaRouteMapping")+")"))),$scope.FxpHelpLinks.splice($scope.Deletedindex,1),angular.element(document.querySelector("#confirmDeleteHelpLink")).modal("hide"),fxpMessage.addMessage(fxpConstants.HelpLinks.Delete,"success")},function(e){fxpMessage.addMessage(fxpConstants.HelpLinks.Error.Delete,"error")})},$scope.deleteHelpSubConfirm=function(){$scope.FxpHelpLinks[$scope.Personaindex].HelpLinks.splice($scope.Deletedindex,1);var e=angular.copy($scope.FxpHelpLinks[$scope.Personaindex]);FxpFactory.updateFxpHelpLinksDetails(e,$stateParams.EnvID,$scope.Personaindex,fxpConstants.Action.Update).then(function(e){angular.element(document.querySelector("#confirmDeleteHelpSubLink")).modal("hide"),fxpMessage.addMessage(fxpConstants.SubHelplinks.Delete,"success")},function(e){fxpMessage.addMessage(fxpConstants.HelpLinks.Error.Delete,"error")})},$scope.updateFxpHelpLinks=function(model,form){if($scope.submitted=!0,form.$valid&&!$scope.isDulplicateKey){var updateModel={},index=$scope.editIndex;model.Action==fxpConstants.Action.Update?($scope.FxpHelpLinks[index].DisplayText=model.DisplayText,$scope.FxpHelpLinks[index].DisplayOrder=model.DisplayOrder,updateModel=angular.copy($scope.FxpHelpLinks[index])):(fxpModel.FxpHelpLink.DisplayText=model.DisplayText,fxpModel.FxpHelpLink.DisplayOrder=model.DisplayOrder,fxpModel.FxpHelpLink.HelpLinks=[],$scope.FxpHelpLinks.push(fxpModel.FxpHelpLink),updateModel=angular.copy(fxpModel.FxpHelpLink)),FxpFactory.updateFxpHelpLinksDetails(updateModel,$stateParams.EnvID,$scope.editIndex,model.Action).then(function(response){$scope.PersonaData=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("personaRouteMapping")+")"))),angular.element(document.querySelector("#editFxpHelpLinks")).modal("hide"),model.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.HelpLinks.Update,"success"):fxpMessage.addMessage(fxpConstants.HelpLinks.Add,"success")},function(e){angular.element(document.querySelector("#editFxpHelpLinks")).modal("hide"),model.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.HelpLinks.Error.Update,"error"):fxpMessage.addMessage(fxpConstants.HelpLinks.Error.Add,"error")})}},$scope.modalClose=function(e,t){$scope.submitted=!1,angular.element(document.querySelector("#"+e)).modal("hide")},$scope.modelCancel=function(e){angular.element(document.querySelector("#"+e)).modal("hide")},$scope.editFxpFooter=function(e,t,s){$scope.submitted=!1,$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editFxpFooter")).modal("show")},$scope.updateFxpFooter=function(e,t){if($scope.submitted=!0,t.$valid){var s={},o=$scope.editIndex;e.Action==fxpConstants.Action.Update?($scope.FxpFooterData[o].ElementType=e.ElementType,$scope.FxpFooterData[o].DisplayText=e.DisplayText,$scope.FxpFooterData[o].TabIndex=e.TabIndex,$scope.FxpFooterData[o].href=e.href,$scope.FxpFooterData[o].target=e.target,$scope.FxpFooterData[o].cssClass=e.cssClass,s=angular.copy($scope.FxpFooterData)):(fxpModel.Footer.ElementType=e.ElementType,fxpModel.Footer.DisplayText=e.DisplayText,fxpModel.Footer.TabIndex=e.TabIndex,fxpModel.Footer.href=e.href,fxpModel.Footer.target=e.target,fxpModel.Footer.cssClass=e.cssClass,$scope.FxpFooterData.push(fxpModel.Footer),s=angular.copy($scope.FxpFooterData)),FxpFactory.updateFxpFooterDataDetails(s,$stateParams.EnvID).then(function(t){angular.element(document.querySelector("#editFxpFooter")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.FxpFooter.Update,"success"):fxpMessage.addMessage(fxpConstants.FxpFooter.Add,"success")},function(t){angular.element(document.querySelector("#editFxpFooter")).modal("hide"),e.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.FxpFooter.Error.Update,"error"):fxpMessage.addMessage(fxpConstants.FxpFooter.Error.Add,"error")})}},$scope.deleteFxpFooter=function(e,t){$scope.Deletedindex=t,angular.element(document.querySelector("#confirmFooterModal")).modal("show")},$scope.deleteFooter=function(){$scope.FxpFooterData.splice($scope.Deletedindex,1);var e=angular.copy($scope.FxpFooterData);FxpFactory.updateFxpFooterDataDetails(e,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#confirmFooterModal")).modal("hide"),fxpMessage.addMessage(fxpConstants.FxpFooter.Delete,"success")},function(e){fxpMessage.addMessage(fxpConstants.FxpFooter.Error.Delete,"error")})},$scope.editCouchBaseSettings=function(e){$scope.submitted=!1,$scope.envEdiables={},$scope.envEdiables=angular.copy(e),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update,angular.element(document.querySelector("#editCouchBaseSettings")).modal("show")},$scope.editAdalAuthExcludeExtn=function(e){$scope.submitted=!1,$scope.envEdiables={},$scope.envEdiables.AdalAuthExcludeExtn=e,$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update,angular.element(document.querySelector("#editAdalAuthExcludeExtn")).modal("show")},$scope.updateCouchBaseSettings=function(e,t){if($scope.submitted=!0,t.$valid){$scope.BaseConfiguration.CouchBaseSettings.CouchBaseLoginUrl=e.CouchBaseLoginUrl,$scope.BaseConfiguration.CouchBaseSettings.CouchAccessToken=e.CouchAccessToken;var s=angular.copy(e.CouchBaseSettings);FxpFactory.updateCouchBaseSettings(s,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#editCouchBaseSettings")).modal("hide"),fxpMessage.addMessage(fxpConstants.CouchBaseSettingUpdate,"success")},function(e){fxpMessage.addMessage(fxpConstants.CouchBaseSettings.Error.Update,"success")})}},$scope.updateAdalAuthExcludeExtn=function(e,t){$scope.submitted=!0,t.$valid&&($scope.BaseConfiguration.FxpConfigurationStrings.AdalAuthExcludeExtn=e.AdalAuthExcludeExtn,FxpFactory.updateAdalAuthExcludeExtn($scope.BaseConfiguration.FxpConfigurationStrings.AdalAuthExcludeExtn,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#editAdalAuthExcludeExtn")).modal("hide"),fxpMessage.addMessage(fxpConstants.AdalAuthExcludeExtnUpdate,"success")},function(e){fxpMessage.addMessage(fxpConstants.AdalAuthExcludeExtn.Error.Update,"error")}))}}]),environmentApp.filter("searchKeyValue",function(){return function(e,t){var s={};return void 0!=t?(t=t.toLowerCase(),angular.forEach(e,function(e,o){var n=o.toLowerCase(),a=e.toString().toLowerCase();n.indexOf(t)===-1&&a.indexOf(t)===-1||(s[o]=e)}),s):e}}),environmentApp.filter("searchMessageFilter",function(){return function(e,t){var s={};return void 0!=t?(t=t.toLowerCase(),angular.forEach(e,function(e,o){if("object"==typeof e){var n=o.toLowerCase(),a=e.ErrorMessage.toString().replace(/\s\s+/g," ").toLowerCase(),r=e.ErrorMessageTitle.replace(/\s\s+/g," ").toString().toLowerCase();n.indexOf(t)===-1&&a.indexOf(t)===-1&&r.indexOf(t)===-1||(s[o]=e)}}),s):e}}),environmentApp.controller("ManageEnvironmentsController",["$scope","FxpFactory","$state","$rootScope","fxpMessage","fxpConstants","fxpModel",function($scope,FxpFactory,$state,$rootScope,fxpMessage,fxpConstants,fxpModel){function PageInit(){FxpFactory.getConfigDetails().then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.Environments=data,localStorage.removeItem("selectedEnv"),$rootScope.$emit("environmentChange",""),$rootScope.$emit("enablePublish",!1)})}PageInit(),$scope.selectFolder=function(e){if(0!=e.files.length){var t=e.files;$scope.$apply(function(){$scope.envEdiables.LocalPath=t[0].path})}else $scope.$apply(function(){$scope.envEdiables.LocalPath=""})},$scope.editConfiguredEnvironments=function(e,t,s){$scope.editIndex=s,$scope.submitted=!1,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editEnvironments")).modal("show")},$scope.updateConfiguredEnvironments=function(e){if($scope.submitted=!0,e.$valid){var t="",s=!0,o=$scope.editIndex,n=angular.copy($scope.Environments);
if($scope.envEdiables.Source===fxpConstants.Source.File){var a=$scope.envEdiables.LocalPath.split(/\\/g);t=a[a.length-1],$scope.envEdiables.LocalPath!=n[o].LocalPath&&(s=FxpFactory.verifyFilesinDirectory($scope.envEdiables.LocalPath,$scope.envEdiables.FileSourceType),s||fxpMessage.addMessage(fxpConstants.fileNotExists,"error"))}s&&(t=$scope.envEdiables.Source===fxpConstants.Source.File?t:$scope.envEdiables.EnvironmentName,fxpModel.configDetails.Source=$scope.envEdiables.Source,fxpModel.configDetails.LocalPath=$scope.envEdiables.LocalPath,fxpModel.configDetails.FileSourceType=$scope.envEdiables.FileSourceType,fxpModel.configDetails.StorageName=$scope.envEdiables.StorageName,fxpModel.configDetails.StorageKey=$scope.envEdiables.StorageKey,fxpModel.configDetails.EnvironmentName=t,$scope.envEdiables.Action===fxpConstants.Action.Update?n[o]=fxpModel.configDetails:n.push(fxpModel.configDetails),$scope.envEdiables.Source===fxpConstants.Source.File?FxpFactory.updateConfigData(n).then(function(e){angular.element(document.querySelector("#editEnvironments")).modal("hide"),fxpMessage.addMessage(fxpConstants.Success,"success"),$scope.Environments=angular.copy(n)},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")}):FxpFactory.updateConfigWithBlobFiles(n,$scope.envEdiables).then(function(e){angular.element(document.querySelector("#editEnvironments")).modal("hide"),fxpMessage.addMessage(fxpConstants.Success,"success"),$scope.Environments=angular.copy(n)},function(e){fxpMessage.addMessage(fxpConstants.AzureStorageError,"error")}))}},$scope.EnvironmentNameAvilabiltyCheck=function(e){var t=$scope.envEdiables.EnvironmentName;$scope.isDupicateEnvironmentName=$scope.Environments.filter(function(e,s){if(s!=$scope.editIndex)return e.EnvironmentName.toLowerCase()==t.toLowerCase()}).length>0},$scope.deleteEnvironment=function(e,t){$scope.Deletedindex=t,angular.element(document.querySelector("#confirmEnvironmentsModule")).modal("show")},$scope.deleteEnvironmentConfirm=function(){var e=$scope.Environments[$scope.Deletedindex];$scope.Environments.splice($scope.Deletedindex,1);var t=angular.copy($scope.Environments);FxpFactory.updateConfigData(t).then(function(){FxpFactory.deleteConfigDirectory(e),angular.element(document.querySelector("#confirmEnvironmentsModule")).modal("hide")},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")})},$scope.modelCancel=function(e){angular.element(document.querySelector("#"+e)).modal("hide")}}]),environmentApp.controller("EnvironmentController",["$scope","FxpFactory","$filter","$state","$stateParams","fxpMessage","fxpConstants","fxpModel",function($scope,FxpFactory,$filter,$state,$stateParams,fxpMessage,fxpConstants,fxpModel){function PageInit(){FxpFactory.getPersonaList($stateParams.EnvID).then(function(response){var personaList=[],data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.PersonaData=data;for(var persona in data.Personas)personaList.push(persona);$scope.Personas=personaList},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")}),FxpFactory.getRoutes($stateParams.EnvID).then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.Routes=data.Routes;for(var route in data.Routes)$scope.Routes[route].RouteConfig=JSON.parse(JSON.stringify(eval("("+data.Routes[route].RouteConfig+")")));$scope.FxpHelpLinks=data.FxpHelpLinks},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")}),FxpFactory.getPartnerModules($stateParams.EnvID).then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.PartnerModules=data.PartnerModules,$scope.Scripts=data.PartnerAssets.Scripts,$scope.Styles=data.PartnerAssets.Styles,$scope.BaseConfiguration=data.BaseConfiguration,$scope.FxpConfigurationStrings=data.BaseConfiguration.FxpConfigurationStrings,$scope.FxpUIStrings=data.BaseConfiguration.FxpConfigurationStrings.UIStrings,$scope.OBOUIStrings=data.BaseConfiguration.FxpConfigurationStrings.UIStrings.OBOUIStrings,$scope.FxpFooterData=data.BaseConfiguration.FxpFooterData},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")}),FxpFactory.getPersonaRoles($stateParams.EnvID).then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.PersonaRoles=data.Persona},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")}),$scope.footerdata=FxpFactory.getFxpFooterData()}$scope.formSubmitted=!1,$scope.isPersonaRouteUpdated=!1,$scope.isPersonaHLinkUpdated=!1,$scope.editScriptsModel={},$scope.editPartnerModuleform={},$scope.editStylesform={},$scope.editScriptsform={},$scope.editRouteform={},$scope.FxpUIStrings={},$scope.EditRouteModel={},$scope.content={},PageInit(),$scope.getconfigParse=function(data){if(null!=data||void 0!=data)return JSON.parse(JSON.stringify(eval("("+data+")")))},$scope.onNavigate=function(e){$state.go(e)},$scope.editPrtnerScripts=function(e,t,s){$scope.submitted=!1,$scope.isDuplicateScriptUrl=!1,$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editScriptsModel")).modal("show")},$scope.deletePartnerScripts=function(e,t){$scope.Deletedindex=t,angular.element(document.querySelector("#confirmScriptsModule")).modal("show")},$scope.deletePartnerScriptsDetails=function(){$scope.Scripts.splice($scope.Deletedindex,1);var data=angular.copy($scope.Scripts);FxpFactory.updatePartnerScriptsDetails(data,$stateParams.EnvID).then(function(){angular.element(document.querySelector("#confirmScriptsModule")).modal("hide"),fxpMessage.addMessage(fxpConstants.PartnerScripts.Delete,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.Scripts=envDetails.PartnerAssets.Scripts,fxpMessage.addMessage(fxpConstants.PartnerScripts.Error,"error"),angular.element(document.querySelector("#confirmScriptsModule")).modal("hide")})},$scope.ScriptUrlAvilabiltyCheck=function(e){var t=$scope.envEdiables.Url;$scope.isDuplicateScriptUrl=$scope.Scripts.filter(function(e,s){if(s!=$scope.editIndex)return e.Url.toLowerCase()==t.toLowerCase()}).length>0},$scope.updatePartnerScripts=function(modaldata,form){if($scope.submitted=!0,form.$valid&&!$scope.isDuplicateScriptUrl){var index;modaldata.Action==fxpConstants.Action.Update?(index=$scope.editIndex,$scope.Scripts[index].Url=modaldata.Url,$scope.Scripts[index].SortOrder=modaldata.SortOrder):(fxpModel.PartnerScripts.Url=modaldata.Url,fxpModel.PartnerScripts.SortOrder=modaldata.SortOrder,$scope.Scripts.push(fxpModel.PartnerScripts));var data=angular.copy($scope.Scripts);FxpFactory.updatePartnerScriptsDetails(data,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#editScriptsModel")).modal("hide"),modaldata.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.PartnerScripts.Update,"success"):fxpMessage.addMessage(fxpConstants.PartnerScripts.Add,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.Scripts=envDetails.PartnerAssets.Scripts,fxpMessage.addMessage(fxpConstants.PartnerScripts.Error,"error"),angular.element(document.querySelector("#editScriptsModel")).modal("hide")}),form={}}},$scope.IsObject=function(e){return $scope.isJsontext="string"!=typeof e,$scope.isJsontext},$scope.editPrtnerStyles=function(e,t,s){$scope.submitted=!1,$scope.isDuplicateStyle=!1,$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editStylesModel")).modal("show")},$scope.deletePartnerStyles=function(e,t){$scope.Deletedindex=t,angular.element(document.querySelector("#confirmStylesModule")).modal("show")},$scope.deletePartnerStylesDetails=function(){$scope.Styles.splice($scope.Deletedindex,1);var data=angular.copy($scope.Styles);FxpFactory.updatePartnerStylesDetails(data,$stateParams.EnvID).then(function(){angular.element(document.querySelector("#confirmStylesModule")).modal("hide"),fxpMessage.addMessage(fxpConstants.PartnerStyles.Delete,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.Styles=envDetails.PartnerAssets.Styles,fxpMessage.addMessage(fxpConstants.PartnerStyles.Error,"error"),angular.element(document.querySelector("#confirmStylesModule")).modal("hide")})},$scope.updatePartnerStyles=function(modaldata,form){if($scope.submitted=!0,form.$valid&&!$scope.isDuplicateStyle){var index;modaldata.Action==fxpConstants.Action.Update?(index=$scope.editIndex,$scope.Styles[index].Url=modaldata.Url,$scope.Styles[index].SortOrder=modaldata.SortOrder):(fxpModel.PartnerStyles.Url=modaldata.Url,fxpModel.PartnerStyles.SortOrder=modaldata.SortOrder,$scope.Styles.push(fxpModel.PartnerStyles));var data=angular.copy($scope.Styles);FxpFactory.updatePartnerStylesDetails(data,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#editStylesModel")).modal("hide"),modaldata.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.PartnerStyles.Update,"success"):fxpMessage.addMessage(fxpConstants.PartnerStyles.Add,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.Styles=envDetails.PartnerAssets.Styles,fxpMessage.addMessage(fxpConstants.PartnerStyles.Error,"error"),angular.element(document.querySelector("#editStylesModel")).modal("hide")})}},$scope.StylesAvilabiltyCheck=function(e){var t=$scope.envEdiables.Url;$scope.isDuplicateStyle=$scope.Styles.filter(function(e,s){if(s!=$scope.editIndex)return e.Url.toLowerCase()==t.toLowerCase()}).length>0},$scope.editPartnerModule=function(e,t,s){$scope.submitted=!1,$scope.isDuplicatePartnerModule=!1,$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update,$scope.envEdiables.partnerModule=angular.copy(e)):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add,$scope.envEdiables.partnerModule=""),angular.element(document.querySelector("#editPartnerModule")).modal("show")},$scope.PartnerModuleAvilabiltyCheck=function(e){var t=$scope.envEdiables.partnerModule;$scope.isDuplicatePartnerModule=$scope.PartnerModules.filter(function(e,s){if(s!=$scope.editIndex)return e.toLowerCase()==t.toLowerCase()}).length>0},$scope.deletePartnerModule=function(e,t){$scope.Deletedindex=t,angular.element(document.querySelector("#confirmPartnerModule")).modal("show")},$scope.deletePartnerModuleDetails=function(){$scope.PartnerModules.splice($scope.Deletedindex,1);var data=angular.copy($scope.PartnerModules);FxpFactory.updatePartnerModuleDetails(data,$stateParams.EnvID).then(function(){angular.element(document.querySelector("#confirmPartnerModule")).modal("hide"),fxpMessage.addMessage(fxpConstants.PartnerModules.Delete,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.PartnerModules=envDetails.PartnerModules,fxpMessage.addMessage(fxpConstants.PartnerModules.Error,"error"),angular.element(document.querySelector("#confirmPartnerModule")).modal("hide")})},$scope.updatePartnerModule=function(modaldata,form){if($scope.submitted=!0,form.$valid&&!$scope.isDuplicatePartnerModule){if(modaldata.Action==fxpConstants.Action.Update){var index=$scope.editIndex;$scope.PartnerModules[index]=modaldata.partnerModule}else $scope.PartnerModules.push(modaldata.partnerModule);FxpFactory.updatePartnerModuleDetails($scope.PartnerModules,$stateParams.EnvID).then(function(e){angular.element(document.querySelector("#editPartnerModule")).modal("hide"),modaldata.Action==fxpConstants.Action.Update?fxpMessage.addMessage(fxpConstants.PartnerModules.Update,"success"):fxpMessage.addMessage(fxpConstants.PartnerModules.Add,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("partnerapp")+")")));$scope.PartnerModules=envDetails.PartnerModules,fxpMessage.addMessage(fxpConstants.PartnerModules.Error,"error"),angular.element(document.querySelector("#editPartnerModule")).modal("hide")})}},$scope.routeChecked=function(e,t,s){try{var o=angular.element(document.querySelector("#"+s));FxpFactory.updatePersonaRouteMapping(e,t,!o[0].checked,$stateParams.EnvID),$scope.isPersonaRouteUpdated=!0}catch(e){fxpMessage.addMessage(fxpConstants.Error,"error")}},$scope.verifyPersonaHelpLinkMap=function(e,t){var s=$scope.PersonaData;return s.Personas[e].FxpHelpLinks.indexOf(t)>=0},$scope.addRoute=function(){$scope.submitted=!1,$scope.isDupicateRouteName=!1,$scope.EditRouteModel={},$scope.EditRouteModel.RouteConfig={},angular.element(document.querySelector("#AddRouteModel")).modal("show")},$scope.editRoute=function(e,t,s){$scope.isDupicateRouteName=!1,$scope.submitted=!1,$scope.editIndex=s,$scope.EditRouteModel={},$scope.EditRouteModel.RouteConfig={},t==fxpConstants.Action.Edit?($scope.ModelTitle="Update Route Configuration",$scope.EditRouteModel=angular.copy(e),$scope.EditRouteModel.ButtonText=fxpConstants.Action.Update,$scope.EditRouteModel.Action=fxpConstants.Action.Update):($scope.ModelTitle="Add Route Configuration",$scope.EditRouteModel.ButtonText=fxpConstants.Action.Save,$scope.EditRouteModel.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#AddRouteModel")).modal("show")},$scope.CreateRouteConfigKey=function(){$scope.submitted=!1,$scope.disableKeys=!1,$scope.routeConfigKeyEdiables=[],$scope.routeConfigKeyEdiables.Action=fxpConstants.Action.Add,angular.element(document.querySelector("#AddRouteConfigModel")).modal("show")},$scope.editRouteConfigKey=function(e,t,s){$scope.submitted=!1,$scope.disableKeys=!0,$scope.routeEditIndex=s,$scope.routeConfigKeyEdiables={key:"",value:""},$scope.routeConfigKeyEdiables.key=e,$scope.routeConfigKeyEdiables.value="string"==typeof t?t:JSON.stringify(t,null,4),$scope.routeConfigKeyEdiables.Action=fxpConstants.Action.Update,angular.element(document.querySelector("#AddRouteConfigModel")).modal("show")},$scope.updateRouteConfigKey=function(e,t,s){$scope.submitted=!0,$scope.isInvalidJson=!1,t.$valid&&(s&&($scope.isInvalidJson=!$scope.validateJson(e.value)),$scope.isInvalidJson||($scope.EditRouteModel.RouteConfig[e.key]=e.value,angular.element(document.querySelector("#AddRouteConfigModel")).modal("hide")))},$scope.validateJson=function(e){try{angular.fromJson(e)}catch(e){return!1}return!0},$scope.JsonCheckbox=function(){$scope.isInvalidJson=!1},$scope.updateRoute=function(modaldata,action,form){if($scope.submitted=!0,form.$valid&&!$scope.isDupicateRouteName){var route={};if(action==fxpConstants.Action.Update){var index=$scope.editIndex;$scope.Routes[index].StateName=modaldata.StateName,$scope.Routes[index].AppHeader=modaldata.AppHeader,$scope.Routes[index].Style=modaldata.Style,$scope.Routes[index].RouteConfig=modaldata.RouteConfig,$scope.Routes[index].RouteName=modaldata.RouteName,route=angular.copy($scope.Routes[index])}else fxpModel.Routes.StateName=modaldata.StateName,fxpModel.Routes.RouteConfig=modaldata.RouteConfig,fxpModel.Routes.Style=modaldata.Style,fxpModel.Routes.AppHeader=modaldata.AppHeader,fxpModel.Routes.RouteName=modaldata.RouteName,route=angular.copy(fxpModel.Routes),$scope.Routes.push(fxpModel.Routes);route.RouteConfig=JSON.stringify(modaldata.RouteConfig),FxpFactory.updateRouteDetails($stateParams.EnvID,route,action,index).then(function(response){var persona=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("personaRouteMapping")+")")));$scope.PersonaData=persona,action==fxpConstants.Action.Update?(fxpMessage.addMessage(fxpConstants.Routes.Update,"success"),angular.element(document.querySelector("#AddRouteModel")).modal("hide")):(fxpMessage.addMessage(fxpConstants.Routes.Add,"success"),angular.element(document.querySelector("#AddRouteModel")).modal("hide"))},function(error){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("routes")+")")));$scope.Routes=envDetails.Routes,fxpMessage.addMessage(fxpConstants.Routes.Error,"error"),action==fxpConstants.Action.Update?angular.element(document.querySelector("#AddRouteModel")).modal("hide"):angular.element(document.querySelector("#AddRouteModel")).modal("hide")})}},$scope.deleteRouteKey=function(e){$scope.DeletedRouteKey=e,angular.element(document.querySelector("#confirmRouteKeyModal")).modal("show")},$scope.deleteRouteKeyConfirm=function(){try{delete $scope.EditRouteModel.RouteConfig[$scope.DeletedRouteKey],angular.element(document.querySelector("#confirmRouteKeyModal")).modal("hide")}catch(e){fxpMessage.addMessage(fxpConstants.Routes.Error,"error")}},$scope.deleteRoute=function(e){$scope.Deletedindex=e,angular.element(document.querySelector("#confirmRouteModal")).modal("show")},$scope.deleteRouteConfirm=function(){$scope.Routes.splice($scope.Deletedindex,1),FxpFactory.updateRouteDetails($stateParams.EnvID,null,"Delete",$scope.Deletedindex).then(function(){angular.element(document.querySelector("#confirmRouteModal")).modal("hide"),fxpMessage.addMessage(fxpConstants.Routes.Delete,"success")},function(response){var envDetails=JSON.parse(JSON.stringify(eval("("+localStorage.getItem("routes")+")")));$scope.Routes=envDetails.Routes,fxpMessage.addMessage(fxpConstants.Routes.Error,"error"),angular.element(document.querySelector("#confirmRouteModal")).modal("hide")})},$scope.RouteNameAvilabiltyCheck=function(e){route=$scope.EditRouteModel.RouteName,$scope.isDupicateRouteName=$scope.Routes.filter(function(e,t){if(t!=$scope.editIndex)return e.RouteName.toLowerCase()==route.toLowerCase()}).length>0},$scope.updatePersonaRouteMap=function(){try{FxpFactory.updatePersonaRouteMapptofiles($stateParams.EnvID),fxpMessage.addMessage(fxpConstants.Routes.RouteMap,"success"),$scope.isPersonaRouteUpdated=!1}catch(e){fxpMessage.addMessage(fxpConstants.Routes.Error,"error")}},$scope.verifyPersonaRouteMap=function(e,t){var s=$scope.PersonaData;return s.Personas[e].Routes.indexOf(t)>=0},$scope.navigateTohome=function(){$state.go("wizard")},$scope.modalClose=function(e,t){$scope.submitted=!1,angular.element(document.querySelector("#"+e)).modal("hide")},$scope.modelCancel=function(e){angular.element(document.querySelector("#"+e)).modal("hide")}}]),environmentApp.controller("TableConfigController",["$scope","FxpFactory","$state","$rootScope","fxpMessage","$stateParams","fxpConstants","fxpModel",function($scope,FxpFactory,$state,$rootScope,fxpMessage,$stateParams,fxpConstants,fxpModel){function PageInit(){FxpFactory.getTableConfig($stateParams.EnvID).then(function(response){console.log(response);var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.TableConfig=data.Entities},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")})}$scope.TableConfig={},PageInit(),$scope.editTableKey=function(e,t,s){$scope.editIndex=s,$scope.envEdiables={},t==fxpConstants.Action.Edit?($scope.envEdiables=angular.copy(e),$scope.envEdiables.ButtonText=fxpConstants.Action.Update,$scope.envEdiables.Action=fxpConstants.Action.Update):($scope.envEdiables.ButtonText=fxpConstants.Action.Save,$scope.envEdiables.Action=fxpConstants.Action.Add),angular.element(document.querySelector("#editTableContent")).modal("show")},$scope.updateTableKey=function(e,t){try{if(t.$valid){if($scope.envEdiables.Action===fxpConstants.Action.Update){var s=$scope.editIndex;$scope.TableConfig[s].PartitionKey=$scope.envEdiables.PartitionKey,$scope.TableConfig[s].RowKey=$scope.envEdiables.RowKey,$scope.TableConfig[s].IsBlob=$scope.envEdiables.IsBlob,$scope.TableConfig[s].Key=$scope.envEdiables.Key,$scope.TableConfig[s].Value=$scope.envEdiables.Value}else fxpModel.FxpTable.PartitionKey=e.PartitionKey,fxpModel.FxpTable.RowKey=e.RowKey,fxpModel.FxpTable.IsBlob=e.IsBlob,fxpModel.FxpTable.Key=e.Key,fxpModel.FxpTable.Value=e.Value;var o=angular.copy($scope.TableConfig);FxpFactory.updateTableConfig(o,$stateParams.EnvID).then(function(){angular.element(document.querySelector("#editTableContent")).modal("hide"),fxpMessage.addMessage(fxpConstants.FxpTable.Update,"success")},function(e){angular.element(document.querySelector("#editTableContent")).modal("hide"),fxpMessage.addMessage(fxpConstants.FxpTable.Update,"success")})}}catch(e){fxpMessage.addMessage(fxpConstants.FxpTable.Error.Update,"error")}},$scope.deleteTableKey=function(e,t){$scope.Deletedindex=t,angular.element(document.querySelector("#confirmTableModule")).modal("show")},$scope.deleteTableKeyConfirm=function(){$scope.TableConfig.splice($scope.Deletedindex,1);var e=angular.copy($scope.TableConfig);FxpFactory.updateTableConfig(e,$stateParams.EnvID).then(function(){angular.element(document.querySelector("#confirmTableModule")).modal("hide")},function(e){fxpMessage.addMessage(fxpConstants.FxpTable.Error.Delete,"error")})},$scope.modelCancel=function(e){angular.element(document.querySelector("#"+e)).modal("hide")}}]),environmentApp.controller("wizardController",["$scope","FxpFactory","$state","$rootScope","fxpMessage","fxpConstants","FxpPreSetupFactory",function($scope,FxpFactory,$state,$rootScope,fxpMessage,fxpConstants,FxpPreSetupFactory){function PageInit(){$scope.isDuplicatePath=!1,FxpFactory.getConfigDetails().then(function(response){var data=JSON.parse(JSON.stringify(eval("("+response+")")));$scope.Environments=data}),manageHeaderButtons(!1),$scope.isFormsubmitted=!1,$scope.isDupicateEnvironmentName=!1}function manageHeaderButtons(e){try{var t=angular.element(document.querySelector("#liPublish"))[0];t.attributes["data-disabled"].value=!e}catch(e){fxpMessage.addMessage(fxpConstants.error,"error")}}function configEnvironment(){FxpFactory.updateConfiguration($scope.selected).then(function(e){navigateToWizard(e),fxpMessage.addMessage(fxpConstants.Success,"success")},function(e){fxpMessage.addMessage(fxpConstants.Error,"error")})}function navigateToWizard(e){$rootScope.isConfigEnvCall=!1,manageHeaderButtons(!0),$scope.isNewUser=!1,localStorage.setItem("selectedEnv",JSON.stringify(e)),$state.go("wizard")}$scope.selected={},$scope.selectedPath="",$scope.sourceEnvironment="",$scope.onClickConfigNewEnvironment=function(){localStorage.removeItem("selectedEnv"),$scope.sourceEnvironment="",$rootScope.isConfigEnvCall=!0,$state.go("setup")},$scope.navigateHome=function(){$rootScope.isConfigEnvCall=!1,$state.go("wizard")},$rootScope.$on("environmentChange",function(e,t){$scope.sourceEnvironment=t}),$rootScope.$on("newUserEvent",function(e,t){$scope.isNewUser=t}),$rootScope.$on("enablePublish",function(e,t){manageHeaderButtons(t),$scope.enablePublish=!t}),PageInit(),$scope.selectFolder=function(e){if(0!=e.files.length){var t=e.files;$scope.isDuplicatePath=$scope.Environments.filter(function(e,s){return e.LocalPath==t[0].path}).length>0,$scope.$apply(function(){$scope.selected.LocalPath=t[0].path})}else $scope.$apply(function(){$scope.selected.LocalPath=""})},$scope.EnvironmentNameAvilabiltyCheck=function(e){env=$scope.selected.EnvironmentName,void 0!=env&&($scope.isDuplicateEnvironmentName=$scope.Environments.filter(function(e,t){return e.EnvironmentName.toLowerCase()==env.toLowerCase()}).length>0)},$scope.onNext=function(e){try{if($scope.isFormsubmitted=!0,e.$valid&&!$scope.isDuplicateEnvironmentName&&!$scope.isDuplicatePath)switch($scope.selected.Source){case fxpConstants.Source.File:var t=FxpFactory.verifyFilesinDirectory($scope.selected.LocalPath,$scope.selected.FileSourceType);t?FxpFactory.downloadLocalFiles($scope.selected).then(function(e){FxpPreSetupFactory.initializePersonaRoutes($scope.selected.LocalPath+"\\"),navigateToWizard(e)}):fxpMessage.addMessage(fxpConstants.fileNotExists,"error");break;case fxpConstants.Source.Blob:FxpFactory.pullBlobFilestoLocal($scope.selected).then(function(e){var t=fxpConstants.configuration.path+$scope.selected.EnvironmentName,s=FxpFactory.verifyFilesinDirectory(t,"confit");s||(confirm(fxpConstants.blobfileNotExists)?(FxpFactory.updateMissingFiles($scope.selected.EnvironmentName),s=!0):FxpFactory.deleteConfigDirectory(envConfig)),s&&configEnvironment()},function(e){fxpMessage.addMessage(fxpConstants.AzureStorageError,"error")});break;default:fxpMessage.addMessage(fxpConstants.Source.Warning,"warning")}}catch(e){fxpMessage.addMessage(fxpConstants.Error,"error")}},$scope.modelCancel=function(e){angular.element(document.querySelector("#"+e)).modal("hide")},$scope.PublishLocal=function(e){try{var t=JSON.parse(localStorage.getItem("selectedEnv"));t.StorageName=e.StorageName,t.StorageKey=e.StorageKey,FxpFactory.onClickPublish(t).then(function(e){e!=fxpConstants.Action.Error?(angular.element(document.querySelector("#storageDetails")).modal("hide"),fxpMessage.addMessage(fxpConstants.Publish,"success")):fxpMessage.addMessage(fxpConstants.AzureStorageError,"error")})}catch(e){fxpMessage.addMessage(fxpConstants.Error,"error")}},$scope.onClickPublish=function(){try{var e=JSON.parse(localStorage.getItem("selectedEnv"));e.Source==fxpConstants.Source.File||e.Source==fxpConstants.Source.New?angular.element(document.querySelector("#storageDetails")).modal("show"):FxpFactory.onClickPublish(e).then(function(e){e!=fxpConstants.Action.Error&&fxpMessage.addMessage(fxpConstants.Publish,"success")},function(e){fxpMessage.addMessage(fxpConstants.AzureStorageError,"error")})}catch(e){fxpMessage.addMessage(fxpConstants.Error,"error")}},$scope.createNewEnvironment=function(){try{var e=JSON.parse(localStorage.getItem("selectedEnv"));FxpFactory.downloadNewDefaultFiles(e).then(function(e){$scope.isConfigEnvCall=!1,manageHeaderButtons(!1),$scope.isNewUser=!1,$state.go("wizard"),localStorage.setItem("selectedEnv",JSON.stringify(e)),angular.element(document.querySelector("#confirmNewUser")).modal("hide")})}catch(e){fxpMessage.addMessage(fxpConstants.Error,"error")}}}]);